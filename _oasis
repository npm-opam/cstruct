OASISFormat: 0.4
Name:        cstruct
Version:     2.3.0
Synopsis:    Manipulate external buffers as C-like structs
Authors:     Anil Madhavapeddy, Richard Mortier, Thomas Gazagnaire,
             Pierre Chambart, David Kaloper, Jeremy Yallop, Hannes Mehnert
License:     ISC
Plugins:     META (0.4), DevFiles (0.4)
BuildTools:  ocamlbuild
PostConfCommand: sh select_ppx_version.sh conf
PostDistCleanCommand: sh select_ppx_version.sh clean

Flag lwt
  Description: build the Lwt library
  Default:     false

Flag async
  Description: build the Async_unix library
  Default:     false

Flag unix
  Description: build the UNIX library
  Default:     true

Flag ppx
  Description: build the ppx syntax extension
  Default: true

Library cstruct
  Path:          lib/
  Modules:       Cstruct
  BuildDepends:  bytes, bigarray, ocplib-endian, ocplib-endian.bigstring, sexplib
  CSources:      cstruct_stubs.c
  CCOpt:         -O3 -Wall

Library async_cstruct
  Build$:        flag(async)
  Path:          async/
  BuildDepends:  cstruct,async,threads
  Findlibname:   async
  Findlibparent: cstruct
  Modules:       Async_cstruct

Library lwt_cstruct
  Build$:        flag(lwt)
  Path:          lwt/
  BuildDepends:  cstruct,lwt.unix
  Findlibname:   lwt
  Findlibparent: cstruct
  Modules:       Lwt_cstruct

Library unix_cstruct
  Build$:        flag(unix)
  Path:          unix/
  BuildDepends:  cstruct,unix
  Findlibname:   unix
  Findlibparent: cstruct
  Modules:       Unix_cstruct

Executable ppx_cstruct
  Build$:       flag(ppx)
  Install:      true
  Path:         ppx
  Custom:       true
  CompiledObject: best
  BuildDepends: ppx_tools.metaquot, bigarray
  MainIs:       ppx_cstruct.ml

Executable test_bounds
  Build$:       flag(tests) && flag(unix)
  Install:      false
  Path:         lib_test
  Custom:       true
  CompiledObject: best
  BuildDepends: cstruct, unix, oUnit, cstruct.unix
  MainIs:       bounds.ml

Test test_bounds
  Command:          $test_bounds
  Run:              true
  WorkingDirectory: _build/lib/

Executable test_ppx_basic
  Build$:       flag(tests) && flag(ppx)
  Install:      false
  Path:         ppx_test
  Custom:       true
  CompiledObject: best
  BuildTools:   ppx_cstruct
  BuildDepends: cstruct, unix, oUnit, cstruct.unix
  MainIs:       basic.ml

Executable test_ppx_enum
  Build$:       flag(tests) && flag(ppx)
  Install:      false
  Path:         ppx_test
  Custom:       true
  CompiledObject: best
  BuildTools:   ppx_cstruct
  BuildDepends: cstruct, unix, oUnit, cstruct.unix
  MainIs:       enum.ml

Executable test_ppx_pcap
  Build$:       flag(tests) && flag(ppx)
  Install:      false
  Path:         ppx_test
  Custom:       true
  CompiledObject: best
  BuildTools:   ppx_cstruct
  BuildDepends: cstruct, unix, oUnit, cstruct.unix
  MainIs:       pcap.ml

Test test_ppx_pcap
  Command:          $test_ppx_pcap
  Run$:              flag(ppx)
  WorkingDirectory: ppx_test

Test test_ppx_basic
  Command:          $test_ppx_basic
  Run$:              flag(ppx)
  WorkingDirectory: ppx_test

Test test_ppx_enum
  Command:          $test_ppx_enum
  Run$:              flag(ppx)
  WorkingDirectory: ppx_test

Executable misc_tests
  Build$:       flag(tests)
  Install:      false
  Path:         lib_test
  Custom:       true
  CompiledObject: best
  BuildDepends: cstruct, oUnit
  MainIs:       tests.ml

Test misc_tests
  Command:          $misc_tests
  Run:              true
  WorkingDirectory: _build/lib/

Document cstruct
  Title:              Documentation and API reference
  Type:               ocamlbuild (0.3)
  BuildTools+:        ocamldoc
  XOcamlbuildPath:    lib
  XOcamlbuildModules: Cstruct
  Install:            false

Document cstruct_lwt
  Title:              Documentation and Lwt API reference
  Type:               ocamlbuild (0.3)
  BuildTools+:        ocamldoc
  XOcamlbuildPath:    lwt
  XOcamlbuildModules: Lwt_cstruct
  Install:            false

Document cstruct_unix
  Title:              Documentation and Unix API reference
  Type:               ocamlbuild (0.3)
  BuildTools+:        ocamldoc
  XOcamlbuildPath:    unix
  XOcamlbuildModules: Unix_cstruct
  Install:            false
